// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/invitations/{invitation_id}/respond": {
            "post": {
                "description": "Позволяет пользователю принять или отклонить приглашение",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitations"
                ],
                "summary": "Ответить на приглашение в проект",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приглашения",
                        "name": "invitation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на принятие или отклонение приглашения",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InvitationResponseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Приглашение обработано успешно",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при обработке приглашения",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Авторизует пользователя с предоставленным email и паролем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Логин",
                "parameters": [
                    {
                        "description": "Запрос на авторизацию пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось авторизовать пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/project_create": {
            "post": {
                "description": "Создает новый проект, который по умолчанию является текстовым проектом. Вид можно поменять на таблицу задач.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Создать новый проект",
                "parameters": [
                    {
                        "description": "Запрос на создание проекта",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProjectCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Проект успешно создан",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при создании проекта",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}": {
            "get": {
                "description": "Возвращает текстовое содержание и задачи проекта.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Получить детали проекта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детали проекта",
                        "schema": {
                            "$ref": "#/definitions/model.ProjectDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при получении данных проекта",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/invite": {
            "post": {
                "description": "Отправляет приглашение пользователю присоединиться к проекту, используя имя для поиска email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitations"
                ],
                "summary": "Пригласить пользователя в проект",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на приглашение пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProjectInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Приглашение успешно отправлено",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при отправке приглашения",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/tasks": {
            "post": {
                "description": "Создаёт новую задачу для конкретного проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Создать новую задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на создание задачи",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TaskCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно создана",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при создании задачи",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/tasks/{task_id}": {
            "get": {
                "description": "Возвращает информацию о задаче по её ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о задаче",
                        "schema": {
                            "$ref": "#/definitions/model.TaskDetails"
                        }
                    },
                    "400": {
                        "description": "Ошибка при получении задачи",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет информацию о задаче, включая статус, исполнителя, дедлайн и т.д.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Обновить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Запрос на обновление задачи",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TaskUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при обновлении задачи",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет задачу по её ID",
                "tags": [
                    "Tasks"
                ],
                "summary": "Удалить задачу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно удалена",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при удалении задачи",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/projects/{project_id}/users": {
            "get": {
                "description": "Возвращает список всех пользователей, работающих над проектом, включая владельца",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Получить список участников проекта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список участников проекта",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/invitations": {
            "get": {
                "description": "Возвращает список приглашений, отправленных пользователю, идентифицированному по email из cookies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitations"
                ],
                "summary": "Получить приглашения для пользователя",
                "responses": {
                    "200": {
                        "description": "Список приглашений",
                        "schema": {
                            "$ref": "#/definitions/model.UserInvitationsResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при получении приглашений",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/projects": {
            "get": {
                "description": "Возвращает все проекты, где пользователь является участником или владельцем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Получить проекты пользователя",
                "responses": {
                    "200": {
                        "description": "Список проектов",
                        "schema": {
                            "$ref": "#/definitions/model.UserProjectsResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при получении проектов",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_create": {
            "post": {
                "description": "Создает нового пользователя с предоставленным email, паролем и именем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Создать нового пользователя",
                "parameters": [
                    {
                        "description": "Запрос на создание пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно создан",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось создать пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/stats": {
            "get": {
                "description": "Возвращает количество завершённых задач и количество проектов, в которых пользователь участвует",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Получить статистику пользователя",
                "responses": {
                    "200": {
                        "description": "Статистика пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.UserStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при получении статистики",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Invitation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invitee_name": {
                    "type": "string"
                },
                "inviter_name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "project_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.InvitationResponseRequest": {
            "type": "object",
            "properties": {
                "response": {
                    "description": "\"accepted\" или \"declined\"",
                    "type": "string"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Project": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ProjectCreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ProjectDetailsResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "model.ProjectInvitationRequest": {
            "type": "object",
            "properties": {
                "invitee_name": {
                    "type": "string"
                }
            }
        },
        "model.TaskCreateRequest": {
            "type": "object",
            "required": [
                "status",
                "title"
            ],
            "properties": {
                "assignee_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "description": "\"To Do\", \"In Progress\", \"Done\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.TaskDetails": {
            "type": "object",
            "properties": {
                "assignee_name": {
                    "type": "string"
                },
                "deadline": {
                    "description": "Используем указатель на time.Time",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "end_time": {
                    "description": "Используем указатель на time.Time",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_time": {
                    "description": "Используем указатель на time.Time",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.TaskUpdateRequest": {
            "type": "object",
            "properties": {
                "assignee_name": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserDetails": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.UserInvitationsResponse": {
            "type": "object",
            "properties": {
                "invitations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Invitation"
                    }
                }
            }
        },
        "model.UserProjectsResponse": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Project"
                    }
                }
            }
        },
        "model.UserStatsResponse": {
            "type": "object",
            "properties": {
                "done_tasks_count": {
                    "type": "integer"
                },
                "total_projects_count": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "Authtoken",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "InnoHack Service API",
	Description:      "task.shmyaks.ru API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
